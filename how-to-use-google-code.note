---
title: Google Code使用介绍
description: Google Code使用介绍
created: !!timestamp '2011-12-04 20:58:10'
tags:
    - GoogleCode
    - SourceControl
---

{% raw %}

在Google Code上整了一个[项目](https://code.google.com/p/newk-vimrc/)试了一下，虽然过程还算坎坷，但是回想起来其实还是挺方便的。

目前暂时只有我自己的一个vimrc（VIM的配置文件），以后考虑把自己用的一些插件放上去。

咱从头唠起吧：

## 建立项目

1. 首先，至少要有个Google账户吧，这个简单，申请个GMail邮箱就可以了。
2. 然后打开：<https://code.google.com/hosting/>
3. 然后Google会提醒你，最好先搜索一下是否有类似的项目，加入一个现有项目会比新建一个项目更好，但是我们是要自己弄个项目来玩玩的，所以无视他，点击下面的”Create a new project "
4. 然后就是开始填表，简单的内容就不翻译了，注意其中两个地方

    * Version control system，就是选择用什么版本管理系统，SVN我已经玩的比较熟了，Git据说比较复杂，所以最后我选择了Mercurial（中文是“汞”的意思，所以大家一般都是叫Hg），这个可以根据个人需要随便选择
    * 还有一个Source code license ，让我们选用什么开源协议，反正这个属于自娱自乐的，所以选择什么协议都无所谓，我选的是GNU Lesser GPL，也就是LGPL，这是一种相对比较宽松的协议，好像BSD协议也是比较宽松的，反正随便选吧。

5. 填好表后，项目就建立好了，可以跑到我们自己的项目主页看看了。这里说一下怎么打开自己的主页，最简单（最笨？）的办法，当然是记域名了，其实也还是很好记的。另外一种方法，就是在Google登陆后，打开code.google.com，在右上角的“ My favorites"上点击右侧向下的箭头，就可以看到项目的链接

## 项目主页介绍

1. Project Home

    这个页面是项目的主页，一般就是写一些这个项目的介绍，然后左侧也有一些信息，反正一看就懂

2. Downloads

    自己上传一些东西，给其他人下载，一般放的是每个Release版本的整个打包，这样可以方便别人下载，当然这不是必须的，我碰到几个开源项目就是没有提供打包好的版本下载，这个我个人觉得还是比较有必要的，虽然SVN和Hg用起来都很简单（Git没用过不太清楚），但是很多Windows下的人还是没怎么用过这些版本控制软件，像我以前一样，有种天然的恐惧，所以提供每个Release版本的下载还是比较有必要的。

    要上传的话，点击左上角“New Download”按钮（这个名字起的太隐晦，导致一开始我老是找不到哪里可以上传），然后就可以上传文件了。上传时要注意文件名要先改好，一般就是项目名称+版本号，因为要求整个项目所有上传的文件名必须是唯一的，而且不能修改，所以一定要起好名字再上传，省得待会传错还得删除重传。

    说到删除，点击一个已有的上传文件，然后可以找到“Delete Download”按钮，点击后会再确认一次，Google建议一般不要删除文件，而是采用“标记为过时“的方法，这样，文件不会出现在默认的下载列表中，除非用户选择显示所有可下载内容，这样做的好处是，便于用户下载以前的版本。

3. Wiki

    Wiki是一种很好的知识分享平台，在这里，项目中的所有人，可以把自己的一些心得体会写出来，然后其他人可以在后面评论。关于Wiki，我也只是有个大概的概念，不甚了解。

    点击”New Page“按钮， 可以新建一个内容，要注意Page name只能是大小写字母和数字，不能有空格，连字符等，这样做的目的，是为了方便以后创建链接（这个具体的操作我暂时还没试过），一般会在第一行写：

        #summary 这里写一句内容介绍

    这样在Wiki列表中，就可以看到一个简短的介绍

    Wiki是可以编辑的，在右上角有Edit按钮和Delete按钮。

    另外，Wiki虽然是纯文本的，但是可以通过一些特殊的字符组合，来显示各种文字效果，具体的在写的时候，旁边有介绍，或者看[这个网址](http://code.google.com/p/support/wiki/WikiSyntax)

4. Issue

这个其实就是一个Bug List或者Bug Trace，用户可以在这里提交问题，提交错误，提交建议，然后管理员可以根据需要，接受，关闭或者其他操作，这些主要反映在issue的状态上，管理员可以修改这个状态，以表示当前的处理进度。已经处理完的issue，会自动隐藏，要看的话可以通过选择显示所有issue来查看。

{% endraw %}
{# vim: ft=markdown
#}
